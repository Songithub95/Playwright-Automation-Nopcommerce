name: Playwright Tests

on:
  schedule:
    - cron: '0 23 * * *' # chạy mỗi ngày lúc 6h sáng VN (GMT+7 = 23h UTC)
  workflow_dispatch:
    inputs:
      env:
        description: "Select test environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - prod
      browser:
        description: "Select Browser"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - chrome
          - firefox
          - webkit
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Determine environment and browser
        id: set-vars
        run: |
          ENV_INPUT="${{ github.event.inputs.env }}"
          BROWSER_INPUT="${{ github.event.inputs.browser }}"

          if [ -z "$ENV_INPUT" ]; then
            ENV_INPUT="staging"
          fi
          if [ -z "$BROWSER_INPUT" ]; then
            BROWSER_INPUT="all"
          fi

          echo "env=$ENV_INPUT" >> $GITHUB_OUTPUT
          echo "browser=$BROWSER_INPUT" >> $GITHUB_OUTPUT
          echo "Environment: $ENV_INPUT"
          echo "Browser: $BROWSER_INPUT"

      - name: Run Playwright tests
        run: |
          echo "Running tests on ${{ steps.set-vars.outputs.env }} using ${{ steps.set-vars.outputs.browser }}"

          if [ "${{ steps.set-vars.outputs.browser }}" = "all" ]; then
            npm run test:${{ steps.set-vars.outputs.env }}:all
          elif [ "${{ steps.set-vars.outputs.browser }}" = "chrome" ]; then
            npm run test:${{ steps.set-vars.outputs.env }}:chrome
          elif [ "${{ steps.set-vars.outputs.browser }}" = "firefox" ]; then
            npm run test:${{ steps.set-vars.outputs.env }}:firefox
          elif [ "${{ steps.set-vars.outputs.browser }}" = "webkit" ]; then
            npm run test:${{ steps.set-vars.outputs.env }}:webkit
          else
            echo "Invalid input"
            exit 1
          fi
        env:
          CI: true

      - name: Generate Playwright HTML report
        if: always()
        run: |
          npx playwright show-report --reporter=html || true

      - name: Generate Allure HTML report
        if: always()
        run: |
          npx allure generate allure-results -o allure-report --clean || true

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: playwright-report

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Prepare combined report folder
        if: always()
        run: |
          mkdir -p combined-report/allure
          mkdir -p combined-report/playwright
          cp -r allure-report/* combined-report/allure/ || true
          cp -r playwright-report/* combined-report/playwright/ || true
          echo "Combined reports prepared at ./combined-report"

      - name: Deploy Reports to GitHub Pages
        if: always()
        id: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./combined-report
          publish_branch: gh-pages
          force_orphan: true

      - name: Show report URLs
        if: always()
        run: |
          echo ""
          echo "Deployment completed successfully!"
          echo "Playwright HTML Report:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/playwright/"
          echo ""
          echo "Allure Report:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure/"
